import { EASUpdateAction, EASUpdateContext } from '../../eas-update/utils';
import { UpdateChannelBasicInfoFragment } from '../../graphql/generated';
import { UpdateChannelObject } from '../../graphql/queries/ChannelQuery';
import { Rollout } from '../branch-mapping';
export declare enum EndOutcome {
    REPUBLISH_AND_ROUTE_BACK = "republish-and-route-back",
    ROUTE_BACK = "route-back"
}
export type NonInteractiveOptions = {
    outcome: EndOutcome;
};
/**
 * End an existing rollout for the project.
 */
export declare class EndRollout implements EASUpdateAction<UpdateChannelBasicInfoFragment> {
    private channelInfo;
    private options;
    constructor(channelInfo: UpdateChannelBasicInfoFragment, options?: Partial<NonInteractiveOptions>);
    runAsync(ctx: EASUpdateContext): Promise<UpdateChannelBasicInfoFragment>;
    getChannelObjectAsync(ctx: EASUpdateContext): Promise<UpdateChannelObject>;
    selectOutcomeAsync(rollout: Rollout): Promise<EndOutcome>;
    performOutcomeAsync(ctx: EASUpdateContext, rollout: Rollout, outcome: EndOutcome): Promise<UpdateChannelBasicInfoFragment>;
    confirmOutcomeAsync(ctx: EASUpdateContext, selectedOutcome: EndOutcome, rollout: Rollout): Promise<boolean>;
}
