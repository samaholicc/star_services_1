import path from 'path';
import { createContext } from 'this-file';
import { spawnAsync } from './shell/spawn.js';
const thisFileCtx = createContext();
export const SCRIPTS_PATH = path.join(thisFileCtx.dirname, '../../dist_commonjs/scripts');
export function createCustomFunctionCall(customFunctionModulePath) {
    return async (ctx, { env, inputs, outputs }) => {
        const serializedArguments = {
            env,
            inputs: Object.fromEntries(Object.entries(inputs).map(([id, input]) => [id, input.serialize()])),
            outputs: Object.fromEntries(Object.entries(outputs).map(([id, output]) => [id, output.serialize()])),
            ctx: ctx.serialize(),
        };
        await spawnAsync('node', [
            path.join(SCRIPTS_PATH, 'runCustomFunction.cjs'),
            customFunctionModulePath,
            JSON.stringify(serializedArguments),
        ], {
            logger: ctx.logger,
            cwd: ctx.workingDirectory,
            env,
        });
    };
}
//# sourceMappingURL=customFunction.js.map